// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`update "package.json" 1`] = `
{
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional",
    ],
    "rules": {
      "body-max-line-length": [
        1,
        "always",
        100,
      ],
    },
  },
  "eslintConfig": {
    "extends": [
      "ybiquitous",
    ],
    "ignorePatterns": [
      "coverage",
      "dist",
      "tmp",
    ],
    "reportUnusedDisableDirectives": true,
    "root": true,
  },
  "lint-staged": {
    "!(*.snap)": "prettier --cache --write",
    "!(CHANGELOG).md": "remark --frail",
    "*.css": "xyz",
    "*.{js,jsx,cjs,mjs,ts,tsx}": "eslint --cache --fix",
  },
  "remarkConfig": {
    "plugins": [
      "remark-preset-ybiquitous",
    ],
  },
  "scripts": {
    "clean": "git clean -dx --force --exclude=node_modules --exclude=.husky",
    "format": "npm-run-all --print-label --parallel lint:*:fix",
    "lint": "npm-run-all --print-label --parallel lint:*",
    "lint:js": "eslint --cache --ext=js,jsx,cjs,mjs,ts,tsx .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:md": "remark . --frail",
    "lint:md:fix": "remark . --output",
    "lint:styles": "npm run prettier -- --check",
    "lint:styles:fix": "npm run prettier -- --write",
    "lint:types": "tsc --noEmit",
    "lint:types:watch": "npm run lint:types -- --watch",
    "prepare": "husky install",
    "prerelease": "git switch main && git pull && npm ci && npm run clean && npm test && npm run clean",
    "pretest": "npm run lint",
    "prettier": "prettier --cache --ignore-path .gitignore .",
    "release": "standard-version",
    "release:dry-run": "standard-version --dry-run",
    "test": "abc",
    "test:coverage": "abc --coverage",
    "test:watch": "abc --watch",
  },
  "standard-version": {
    "scripts": {
      "postchangelog": "prettier --write CHANGELOG.md",
    },
    "sign": true,
  },
}
`;

exports[`update "package.json" without fields 1`] = `
{
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional",
    ],
    "rules": {
      "body-max-line-length": [
        1,
        "always",
        100,
      ],
    },
  },
  "eslintConfig": {
    "extends": [
      "ybiquitous",
    ],
    "ignorePatterns": [
      "coverage",
      "dist",
      "tmp",
    ],
    "reportUnusedDisableDirectives": true,
    "root": true,
  },
  "lint-staged": {
    "!(*.snap)": "prettier --cache --write",
    "!(CHANGELOG).md": "remark --frail",
    "*.{js,jsx,cjs,mjs,ts,tsx}": "eslint --cache --fix",
  },
  "remarkConfig": {
    "plugins": [
      "remark-preset-ybiquitous",
    ],
  },
  "scripts": {
    "clean": "git clean -dx --force --exclude=node_modules --exclude=.husky",
    "format": "npm-run-all --print-label --parallel lint:*:fix",
    "lint": "npm-run-all --print-label --parallel lint:*",
    "lint:js": "eslint --cache --ext=js,jsx,cjs,mjs,ts,tsx .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:md": "remark . --frail",
    "lint:md:fix": "remark . --output",
    "lint:styles": "npm run prettier -- --check",
    "lint:styles:fix": "npm run prettier -- --write",
    "lint:types": "tsc --noEmit",
    "lint:types:watch": "npm run lint:types -- --watch",
    "prepare": "husky install",
    "prerelease": "git switch main && git pull && npm ci && npm run clean && npm test && npm run clean",
    "pretest": "npm run lint",
    "prettier": "prettier --cache --ignore-path .gitignore .",
    "release": "standard-version",
    "release:dry-run": "standard-version --dry-run",
    "test": "test",
    "test:coverage": "test --coverage",
    "test:watch": "test --watch",
  },
  "standard-version": {
    "scripts": {
      "postchangelog": "prettier --write CHANGELOG.md",
    },
    "sign": true,
  },
}
`;

exports[`write ".editorconfig" 1`] = `
"root = true

[*]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8
indent_style = space
indent_size = 2
max_line_length = 100

# trailing spaces in markdown indicate word wrap
[*.md]
trim_trailing_spaces = false
"
`;

exports[`write ".github/workflows/npm-audit-fix.yml" 1`] = `
"name: npm audit fix

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  npm-audit-fix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ybiquitous/npm-audit-fix-action@v4
        with:
          github_token: \${{ secrets.PERSONAL_ACCESS_TOKEN }}
"
`;

exports[`write ".github/workflows/release.yml" 1`] = `
"name: Release

on:
  push:
    tags: ["**"]

jobs:
  release:
    uses: ybiquitous/.github/.github/workflows/nodejs-release-reusable.yml@main
    secrets:
      npm-token: \${{ secrets.NPM_TOKEN }}
"
`;

exports[`write ".github/workflows/test.yml" 1`] = `
"name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        node-version: ["14", "16", "18"]
    uses: ybiquitous/.github/.github/workflows/nodejs-test-reusable.yml@main
    with:
      node-version: \${{ matrix.node-version }}

  lint:
    uses: ybiquitous/.github/.github/workflows/nodejs-lint-reusable.yml@main

  commitlint:
    uses: ybiquitous/.github/.github/workflows/nodejs-commitlint-reusable.yml@main
"
`;

exports[`write ".husky/commit-msg" 1`] = `
"#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

npx --no-install commitlint --edit "$1"
"
`;

exports[`write ".husky/post-commit" 1`] = `
"#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

npm run release:dry-run
"
`;

exports[`write ".husky/pre-commit" 1`] = `
"#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

npx --no-install lint-staged
"
`;

exports[`write ".remarkignore" 1`] = `
"CHANGELOG.md
"
`;
