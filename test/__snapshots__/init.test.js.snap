// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`update "package.json" 1`] = `
Object {
  "commitlint": Object {
    "extends": Array [
      "@commitlint/config-conventional",
    ],
    "rules": Object {
      "body-max-line-length": Array [
        1,
        "always",
        100,
      ],
    },
  },
  "eslintConfig": Object {
    "extends": Array [
      "ybiquitous",
    ],
    "root": true,
  },
  "husky": Object {
    "hooks": Object {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "post-commit": "npm run release:dry-run",
      "pre-commit": "lint-staged",
    },
  },
  "lint-staged": Object {
    "!(*.snap)": "prettier --write",
    "!(CHANGELOG).md": "remark --frail",
    "*.css": "xyz",
    "*.{js,jsx,mjs,ts,tsx}": "eslint --fix",
  },
  "remarkConfig": Object {
    "plugins": Array [
      "preset-lint-recommended",
      "lint-no-heading-punctuation",
      Array [
        "lint-list-item-bullet-indent",
        false,
      ],
      Array [
        "lint-list-item-indent",
        false,
      ],
      "validate-links",
    ],
  },
  "scripts": Object {
    "format": "npm-run-all --print-label --parallel lint:*:fix prettier:write",
    "lint": "npm-run-all --print-label --parallel lint:* prettier:check",
    "lint:js": "eslint .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:md": "remark . --frail",
    "lint:md:fix": "remark . --output",
    "lint:types": "tsc --noEmit",
    "prerelease": "git switch main && git pull && npm ci && npm test",
    "prettier": "prettier --ignore-path .gitignore .",
    "prettier:check": "npm run prettier -- --check",
    "prettier:write": "npm run prettier -- --write",
    "release": "standard-version",
    "release:dry-run": "standard-version --dry-run",
    "test": "abc",
    "test:coverage": "echo \\"unsupported.\\" && exit 1",
    "test:watch": "abc --watch",
  },
  "standard-version": Object {
    "scripts": Object {
      "postchangelog": "prettier --write CHANGELOG.md",
    },
    "sign": true,
  },
}
`;

exports[`update "package.json" without fields 1`] = `
Object {
  "commitlint": Object {
    "extends": Array [
      "@commitlint/config-conventional",
    ],
    "rules": Object {
      "body-max-line-length": Array [
        1,
        "always",
        100,
      ],
    },
  },
  "eslintConfig": Object {
    "extends": Array [
      "ybiquitous",
    ],
    "root": true,
  },
  "husky": Object {
    "hooks": Object {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "post-commit": "npm run release:dry-run",
      "pre-commit": "lint-staged",
    },
  },
  "lint-staged": Object {
    "!(*.snap)": "prettier --write",
    "!(CHANGELOG).md": "remark --frail",
    "*.{js,jsx,mjs,ts,tsx}": "eslint --fix",
  },
  "remarkConfig": Object {
    "plugins": Array [
      "preset-lint-recommended",
      "lint-no-heading-punctuation",
      Array [
        "lint-list-item-bullet-indent",
        false,
      ],
      Array [
        "lint-list-item-indent",
        false,
      ],
      "validate-links",
    ],
  },
  "scripts": Object {
    "format": "npm-run-all --print-label --parallel lint:*:fix prettier:write",
    "lint": "npm-run-all --print-label --parallel lint:* prettier:check",
    "lint:js": "eslint .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:md": "remark . --frail",
    "lint:md:fix": "remark . --output",
    "lint:types": "tsc --noEmit",
    "prerelease": "git switch main && git pull && npm ci && npm test",
    "prettier": "prettier --ignore-path .gitignore .",
    "prettier:check": "npm run prettier -- --check",
    "prettier:write": "npm run prettier -- --write",
    "release": "standard-version",
    "release:dry-run": "standard-version --dry-run",
    "test": "test",
    "test:coverage": "echo \\"unsupported.\\" && exit 1",
    "test:watch": "test --watch",
  },
  "standard-version": Object {
    "scripts": Object {
      "postchangelog": "prettier --write CHANGELOG.md",
    },
    "sign": true,
  },
}
`;

exports[`write ".editorconfig" 1`] = `
"# EditorConfig is awesome: http://EditorConfig.org

root = true

[*]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8
indent_style = space
indent_size = 2
max_line_length = 100

# trailing spaces in markdown indicate word wrap
[*.md]
trim_trailing_spaces = false
"
`;

exports[`write ".github/workflows/commitlint.yml" 1`] = `
"name: commitlint

on:
  push:
    branches: [\\"main\\"]
  pull_request:
    branches: [\\"**\\"]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v2
        with:
          configFile: package.json
"
`;

exports[`write ".github/workflows/npm-audit-fix.yml" 1`] = `
"name: npm audit fix

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:
    branches: [\\"**\\"]

jobs:
  npm-audit-fix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ybiquitous/npm-audit-fix-action@v2
        with:
          github_token: \${{ secrets.PERSONAL_ACCESS_TOKEN }}
"
`;

exports[`write ".github/workflows/release.yml" 1`] = `
"name: Release

on:
  push:
    tags: [\\"**\\"]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo ::set-output name=tag::\${GITHUB_REF/refs\\\\/tags\\\\//}
        id: get_tag
      - uses: softprops/action-gh-release@v1
        with:
          body: |
            See the [changelog](https://github.com/\${{ github.repository }}/blob/\${{ steps.get_tag.outputs.tag }}/CHANGELOG.md) for more details.
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
"
`;

exports[`write ".github/workflows/test.yml" 1`] = `
"name: Test

on:
  push:
    branches: [\\"main\\"]
  pull_request:
    branches: [\\"**\\"]
    tags: [\\"**\\"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [\\"10\\", \\"12\\", \\"14\\"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.1
        with:
          node-version: \${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint
      - run: npm test
      - run: npm run release:dry-run
"
`;

exports[`write ".remarkignore" 1`] = `
"CHANGELOG.md
"
`;
