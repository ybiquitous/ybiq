// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`update "package.json" 1`] = `
{
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional",
    ],
    "rules": {
      "body-max-line-length": [
        1,
        "always",
        300,
      ],
    },
  },
  "eslintConfig": {
    "extends": [
      "ybiquitous",
    ],
    "ignorePatterns": [
      "coverage",
      "dist",
      "tmp",
    ],
    "reportUnusedDisableDirectives": true,
    "root": true,
  },
  "lint-staged": {
    "!(**/*.snap|.husky/**)": "prettier --cache --write",
    "!(CHANGELOG).md": "remark --frail",
    "*.css": "xyz",
    "*.{js,jsx,cjs,mjs,ts,tsx}": "eslint --cache --fix",
  },
  "publishConfig": {
    "access": true,
    "provenance": true,
  },
  "remarkConfig": {
    "plugins": [
      "remark-preset-ybiquitous",
    ],
  },
  "scripts": {
    "changelog": "conventional-changelog --preset conventionalcommits --release-count 0 && prettier --write CHANGELOG.md",
    "clean": "git clean -dx --force --exclude=node_modules --exclude=.husky",
    "format": "npm-run-all --print-label --silent --parallel lint:*:fix",
    "lint": "npm-run-all --print-label --silent --parallel lint:*",
    "lint:commit": "commitlint --from HEAD~10",
    "lint:js": "eslint --cache --ext=js,jsx,cjs,mjs,ts,tsx .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:md": "remark . --frail",
    "lint:md:fix": "remark . --output",
    "lint:styles": "npm run prettier -- --check",
    "lint:styles:fix": "npm run prettier -- --write",
    "lint:types": "tsc --noEmit",
    "lint:types:watch": "npm run lint:types -- --watch",
    "postversion": "npm run changelog",
    "prepare": "husky",
    "pretest": "npm run lint",
    "prettier": "prettier --cache .",
    "test": "abc",
    "test:coverage": "npm --ignore-scripts test -- --coverage",
    "test:watch": "npm --ignore-scripts test -- --watch",
  },
}
`;

exports[`update "package.json" without fields 1`] = `
{
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional",
    ],
    "rules": {
      "body-max-line-length": [
        1,
        "always",
        300,
      ],
    },
  },
  "eslintConfig": {
    "extends": [
      "ybiquitous",
    ],
    "ignorePatterns": [
      "coverage",
      "dist",
      "tmp",
    ],
    "reportUnusedDisableDirectives": true,
    "root": true,
  },
  "lint-staged": {
    "!(**/*.snap|.husky/**)": "prettier --cache --write",
    "!(CHANGELOG).md": "remark --frail",
    "*.{js,jsx,cjs,mjs,ts,tsx}": "eslint --cache --fix",
  },
  "publishConfig": {
    "provenance": true,
  },
  "remarkConfig": {
    "plugins": [
      "remark-preset-ybiquitous",
    ],
  },
  "scripts": {
    "changelog": "conventional-changelog --preset conventionalcommits --release-count 0 && prettier --write CHANGELOG.md",
    "clean": "git clean -dx --force --exclude=node_modules --exclude=.husky",
    "format": "npm-run-all --print-label --silent --parallel lint:*:fix",
    "lint": "npm-run-all --print-label --silent --parallel lint:*",
    "lint:commit": "commitlint --from HEAD~10",
    "lint:js": "eslint --cache --ext=js,jsx,cjs,mjs,ts,tsx .",
    "lint:js:fix": "npm run lint:js -- --fix",
    "lint:md": "remark . --frail",
    "lint:md:fix": "remark . --output",
    "lint:styles": "npm run prettier -- --check",
    "lint:styles:fix": "npm run prettier -- --write",
    "lint:types": "tsc --noEmit",
    "lint:types:watch": "npm run lint:types -- --watch",
    "postversion": "npm run changelog",
    "prepare": "husky",
    "pretest": "npm run lint",
    "prettier": "prettier --cache .",
    "test": "test",
    "test:coverage": "npm --ignore-scripts test -- --coverage",
    "test:watch": "npm --ignore-scripts test -- --watch",
  },
}
`;

exports[`write ".editorconfig" 1`] = `
"# editorconfig.org
root = true

[*]
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8
indent_style = space
indent_size = 2
max_line_length = 100

# trailing spaces in markdown indicate word wrap
[*.md]
trim_trailing_whitespace = false
"
`;

exports[`write ".github/workflows/dependabot-auto-merge.yml" 1`] = `
"name: Dependabot auto-merge

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-merge:
    uses: ybiquitous/.github/.github/workflows/dependabot-auto-merge-reusable.yml@main
    permissions:
      contents: write
"
`;

exports[`write ".github/workflows/npm-audit-fix.yml" 1`] = `
"name: npm audit fix

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  npm-audit-fix:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - uses: ybiquitous/npm-audit-fix-action@v7
        with:
          github_token: \${{ secrets.PERSONAL_ACCESS_TOKEN }}
"
`;

exports[`write ".github/workflows/npm-diff.yml" 1`] = `
"name: npm diff

on:
  pull_request_target:
    types: [opened]

jobs:
  npm-diff:
    if: \${{ startsWith(github.head_ref, 'dependabot/npm_and_yarn/') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: ybiquitous/npm-diff-action@v1
"
`;

exports[`write ".github/workflows/release.yml" 1`] = `
"name: Release

on:
  push:
    tags: ["**"]

jobs:
  release:
    uses: ybiquitous/.github/.github/workflows/nodejs-release-reusable.yml@main
    permissions:
      contents: write
      id-token: write
"
`;

exports[`write ".github/workflows/test.yml" 1`] = `
"name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
  # Run the workflow regularly, as auto-merged PRs by bots may not trigger it.
  schedule:
    - cron: "0 0 1,15 * *"
  # Allow manual triggering of the workflow.
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        node-version: ["20", "22", "24"]
    uses: ybiquitous/.github/.github/workflows/nodejs-test-reusable.yml@main
    with:
      node-version: \${{ matrix.node-version }}
    permissions:
      contents: read

  lint:
    uses: ybiquitous/.github/.github/workflows/nodejs-lint-reusable.yml@main
    permissions:
      contents: read
"
`;

exports[`write ".husky/commit-msg" 1`] = `
"commitlint --edit "$1"
"
`;

exports[`write ".husky/pre-commit" 1`] = `
"lint-staged
"
`;

exports[`write ".remarkignore" 1`] = `
"CHANGELOG.md
"
`;
